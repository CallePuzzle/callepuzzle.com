---
// Componente opcional para debugging del tema
// Solo se muestra en modo desarrollo
const isDev = import.meta.env.DEV;
---

{isDev && (
    <div class="fixed bottom-4 right-4 z-50 bg-base-200 p-2 rounded shadow-lg text-xs opacity-70 hover:opacity-100 transition-opacity">
        <div>Theme: <span id="current-theme">-</span></div>
        <div>Saved: <span id="saved-theme">-</span></div>
        <div>System: <span id="system-theme">-</span></div>
    </div>
)}

<script>
    // Solo ejecutar en desarrollo
    if (import.meta.env.DEV) {
        function updateThemeDebug() {
            const currentTheme = document.documentElement.getAttribute("data-theme") || "none";
            const savedTheme = localStorage.getItem("theme") || "none";
            const systemTheme = window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light";

            const currentThemeEl = document.getElementById("current-theme");
            const savedThemeEl = document.getElementById("saved-theme");
            const systemThemeEl = document.getElementById("system-theme");

            if (currentThemeEl) currentThemeEl.textContent = currentTheme;
            if (savedThemeEl) savedThemeEl.textContent = savedTheme;
            if (systemThemeEl) systemThemeEl.textContent = systemTheme;
        }

        // Actualizar al cargar
        document.addEventListener("DOMContentLoaded", updateThemeDebug);

        // Actualizar cada segundo para ver cambios en tiempo real
        setInterval(updateThemeDebug, 1000);

        // Escuchar cambios en el sistema
        window.matchMedia("(prefers-color-scheme: dark)").addEventListener("change", updateThemeDebug);
    }
</script>

<style>
    /* Estilos espec√≠ficos para el componente debug */
    .theme-debug {
        font-family: monospace;
        font-size: 10px;
        line-height: 1.2;
    }
</style>
